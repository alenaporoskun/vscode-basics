def is_valid_pin_codes(pin_codes):
    """ 
    Всім відомо, що для доступу до кредитної картки банку потрібний пін-код. 
    Класично склалося, що це поєднання чотири цифри. Нам необхідно вирішити наступне програмістське завдання. 
    Є підготовлений перелік пін-кодів. 
    Напишіть функцію is_valid_pin_codes, яка буде приймати як параметр список цих пін-кодів — рядок з чотирьох цифр 
    і повертати логічне значення — валідний список чи ні. Переконайтеся, що серед цих пін-кодів у списку не буде дублікатів, 
    всі вони зберігаються у вигляді рядків, їх довжина дорівнює 4 символам і містять вони тільки цифри.

    Приклад аргументу для функції is_valid_pin_codes:
    ['1101', '9034', '0011']
    Якщо список відповідає всім поставленим умовам, функція повертає логічне значення True. 
    Якщо хоч одну з умов порушено, повертається значення — False. 
    Передбачити перевірку на порожній список в аргументі функції та повернути при цьому значення False. 
    """

    if len(pin_codes) == 0:
        return False
    
    list1, list2 = [], []
    for i1 in range(len(pin_codes)):
        pin1 = pin_codes[i1]

        # перевірка на довжину пін-коду 
        if len(pin1) > 4:
            return False
        # перевірка на входження в пін-код тільки цифр
        for number in pin1:
            if ((ord(number) < 58) & (ord(number) > 47)) == False:
                # ord повертає числове значення символу за таблицею ASCII
                return False

        print(f'pin1 = {pin1}')
        for i2 in range(i1+1, len(pin_codes)):
            pin2 = pin_codes[i2]
            print(f'pin2 = {pin2}')
            # перевірка на дублікати пін-кодів у списку
            if pin1 == pin2:
                return False
            
    return True

# print(is_valid_pin_codes((['1101', '9034', '0011'])))  # True
# print(is_valid_pin_codes((['1101', '9034', '00112']))) # False
print(is_valid_pin_codes((['1101', '9034', '001a'])))    # False
